/**
 * Créer une nouvelle vulnérabilitée
 * Poste en temps réel la nouvelle saisie valide dans le tableau sans rechargement de la page (création élément HTML)
 * 
 */
 function postVulnerability() {
    var xhttp = new XMLHttpRequest(); // Appel AJAX
    let titreSaisie = document.getElementById('titre').value;
    let impactSaisie = document.getElementById('impact').value;
    let exploitationSaisie = document.getElementById('exploitation').value;

    var table = document.getElementById('value');
    if (titreSaisie != '' && (impactSaisie != '' && impactSaisie != 'none' ) && (exploitationSaisie != '' && exploitationSaisie != 'none')) {
        // Insére une ligne à la fin de la table
        let newRow = table.insertRow();

        // Insere une cellule à la fin de la ligne
        let titreCellule = newRow.insertCell();
        let impactCellule = newRow.insertCell();
        let exploitationCellule = newRow.insertCell();
        let risqueCellule = newRow.insertCell();

        // Ajoute un un contenu de texte à chaque cellule
        let titre = document.createTextNode(titreSaisie);
        titreCellule.appendChild(titre);

        let impact = document.createTextNode(impactSaisie);
        impactCellule.appendChild(impact);

        let exploitation = document.createTextNode(exploitationSaisie);
        exploitationCellule.appendChild(exploitation);


        // Calcul Risque en fonction de Impact x Exploitation
        var risqueCalcul;
        switch (impactSaisie) {
            case "Mineur":
                if (exploitationSaisie == 'Difficile') {
                    risqueCalcul = "Mineur"
                }

                if (exploitationSaisie == 'Elevée') {
                    risqueCalcul = "Mineur"
                }

                if (exploitationSaisie == 'Modérée') {
                    risqueCalcul = "Important"
                }

                if (exploitationSaisie == 'Facile') {
                    risqueCalcul = "Majeur"
                }
            break;

            case "Important":
                if (exploitationSaisie == 'Difficile') {
                    risqueCalcul = "Mineur"
                }

                if (exploitationSaisie == 'Elevée') {
                    risqueCalcul = "Important"
                }

                if (exploitationSaisie == 'Modérée') {
                    risqueCalcul = "Important"
                }

                if (exploitationSaisie == 'Facile') {
                    risqueCalcul = "Majeur"
                }
            break;

            case "Majeur":
                if (exploitationSaisie == 'Difficile') {
                    risqueCalcul = "Important"
                }

                if (exploitationSaisie == 'Elevée') {
                    risqueCalcul = "Majeur"
                }

                if (exploitationSaisie == 'Modérée') {
                    risqueCalcul = "Majeur"
                }

                if (exploitationSaisie == 'Facile') {
                    risqueCalcul = "Critique"
                }
            break;

            case "Critique":
                if (exploitationSaisie == 'Difficile') {
                    risqueCalcul = "Important"
                }

                if (exploitationSaisie == 'Elevée') {
                    risqueCalcul = "Majeur"
                }

                if (exploitationSaisie == 'Modérée') {
                    risqueCalcul = "Critique"
                }

                if (exploitationSaisie == 'Facile') {
                    risqueCalcul = "Critique"
                }
            break;
        }

        let risque = document.createTextNode(risqueCalcul);
        risqueCellule.appendChild(risque);
        //
    } else {
        alert("Un ou plusieurs champ(s) est/sont vide(s)");
    }
    xhttp.open("POST", "/api/vulnerabilities", true);
    xhttp.send(JSON.stringify({ // convertit en JSON pour l'envoyer au controller POST / python
        titre: titreSaisie,
        impact: impactSaisie,
        exploitation: exploitationSaisie,
        risque: risqueCalcul
    }));
}